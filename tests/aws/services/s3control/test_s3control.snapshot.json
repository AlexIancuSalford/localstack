{
  "tests/aws/services/s3control/test_s3control.py::TestS3ControlPublicAccessBlock::test_crud_public_access_block": {
    "recorded-date": "24-11-2023, 21:36:06",
    "recorded-content": {
      "get-default-public-access-block": {
        "Error": {
          "AccountId": "111111111111",
          "Code": "NoSuchPublicAccessBlockConfiguration",
          "Message": "The public access block configuration was not found"
        },
        "HostId": "host-id",
        "Message": "The public access block configuration was not found",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put-public-access-block": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-public-access-block": {
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "BlockPublicPolicy": false,
          "IgnorePublicAcls": false,
          "RestrictPublicBuckets": false
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete-public-access-block": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "get-public-access-block-after-delete": {
        "Error": {
          "AccountId": "111111111111",
          "Code": "NoSuchPublicAccessBlockConfiguration",
          "Message": "The public access block configuration was not found"
        },
        "HostId": "host-id",
        "Message": "The public access block configuration was not found",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "idempotent-delete-public-access-block": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      }
    }
  },
  "tests/aws/services/s3control/test_s3control.py::TestS3ControlPublicAccessBlock::test_empty_public_access_block": {
    "recorded-date": "24-11-2023, 22:02:08",
    "recorded-content": {
      "put-public-access-block-empty": {
        "Error": {
          "Code": "InvalidRequest",
          "Message": "Must specify at least one configuration."
        },
        "HostId": "host-id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/aws/services/s3control/test_s3control.py::TestS3ControlAccessPoint::test_access_point_lifecycle": {
    "recorded-date": "24-11-2023, 22:23:01",
    "recorded-content": {
      "list-access-points-start": {
        "AccessPointList": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "create-access-point": {
        "AccessPointArn": "arn:aws:s3:<region>:111111111111:accesspoint/<name:1>",
        "Alias": "<name:1>-<alias-random-part>-s3alias",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-access-point": {
        "AccessPointArn": "arn:aws:s3:<region>:111111111111:accesspoint/<name:1>",
        "Alias": "<name:1>-<alias-random-part>-s3alias",
        "Bucket": "<bucket:1>",
        "BucketAccountId": "111111111111",
        "CreationDate": "datetime",
        "Endpoints": {
          "dualstack": "s3-accesspoint.dualstack.<region>.<endpoint-host>",
          "fips": "s3-accesspoint-fips.<region>.<endpoint-host>",
          "fips_dualstack": "s3-accesspoint-fips.dualstack.<region>.<endpoint-host>",
          "ipv4": "s3-accesspoint.<region>.<endpoint-host>"
        },
        "Name": "<name:1>",
        "NetworkOrigin": "Internet",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list-access-points-after-create": {
        "AccessPointList": [
          {
            "AccessPointArn": "arn:aws:s3:<region>:111111111111:accesspoint/<name:1>",
            "Alias": "<name:1>-<alias-random-part>-s3alias",
            "Bucket": "<bucket:1>",
            "BucketAccountId": "111111111111",
            "Name": "<name:1>",
            "NetworkOrigin": "Internet"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete-access-point": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "list-access-points-after-delete": {
        "AccessPointList": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-delete-access-point": {
        "Error": {
          "AccessPointName": "<name:1>",
          "Code": "NoSuchAccessPoint",
          "Message": "The specified accesspoint does not exist"
        },
        "HostId": "host-id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  }
}
